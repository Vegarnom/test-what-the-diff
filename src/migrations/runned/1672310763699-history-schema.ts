import { MigrationInterface, QueryRunner } from "typeorm";

export class historySchema1672310763699 implements MigrationInterface {
    name = 'historySchema1672310763699'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "auth" ("id" SERIAL NOT NULL, "email" character varying NOT NULL, "password" character varying NOT NULL, "isActive" boolean NOT NULL, "isDeleted" boolean NOT NULL DEFAULT false, "createdAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "updatedAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, CONSTRAINT "PK_7e416cf6172bc5aec04244f6459" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "devices" ("id" SERIAL NOT NULL, "secretKey" character varying NOT NULL, "deviceId" character varying NOT NULL, "deviceName" character varying NOT NULL, "company" character varying NOT NULL, "hostName" character varying NOT NULL, "user" character varying NOT NULL, "keySecretHex" character varying, "description" character varying, "isDeleted" boolean NOT NULL DEFAULT false, "createdAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "updatedAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, CONSTRAINT "UQ_4dea0c39d5758bca808b09a4f6e" UNIQUE ("deviceId", "deviceName"), CONSTRAINT "PK_b4546c6940bd7be8e8f3d4c7b10" PRIMARY KEY ("id", "deviceId", "deviceName"))`);
        await queryRunner.query(`CREATE TABLE "sesame_lock_code" ("id" SERIAL NOT NULL, "code" integer NOT NULL, "name" character varying NOT NULL, "description" character varying NOT NULL, "isDeleted" boolean NOT NULL DEFAULT false, "createdAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "updatedAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, CONSTRAINT "PK_aa21fc1de2dbce95490a0201e51" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "organization" ("isDeleted" boolean NOT NULL DEFAULT false, "deletedDate" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "updatedAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "id" SERIAL NOT NULL, "name" character varying NOT NULL, "address" character varying NOT NULL, "parentId" integer, "structureOrganizationId" integer NOT NULL, CONSTRAINT "PK_00d2fcbb34e7bc54d4bd23bdf53" PRIMARY KEY ("id", "structureOrganizationId"))`);
        await queryRunner.query(`CREATE TABLE "type_device" ("isDeleted" boolean NOT NULL DEFAULT false, "deletedDate" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "updatedAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "id" SERIAL NOT NULL, "name" character varying NOT NULL, CONSTRAINT "PK_be207fbabdd260d6dd181cad5f1" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "brand_device" ("isDeleted" boolean NOT NULL DEFAULT false, "deletedDate" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "updatedAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "id" SERIAL NOT NULL, "name" character varying NOT NULL, "urlApi" character varying, "canSync" boolean NOT NULL, CONSTRAINT "PK_6f8049ed469065946eaa9b84348" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "type_brand_device" ("isDeleted" boolean NOT NULL DEFAULT false, "deletedDate" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "updatedAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "id" SERIAL NOT NULL, "typeDeviceId" integer NOT NULL, "brandDeviceId" integer NOT NULL, "key" character varying, CONSTRAINT "PK_0c02e2bb2d889d83de418e1d547" PRIMARY KEY ("id", "typeDeviceId", "brandDeviceId"))`);
        await queryRunner.query(`CREATE TABLE "device" ("isDeleted" boolean NOT NULL DEFAULT false, "deletedDate" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "updatedAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "id" SERIAL NOT NULL, "deviceId" character varying NOT NULL, "typeBrandId" integer NOT NULL, "organizationId" integer NOT NULL, "tokenDeviceId" integer, "deviceName" character varying NOT NULL, "deviceIp" character varying, "isDisable" boolean NOT NULL DEFAULT false, "note" character varying, CONSTRAINT "PK_2dc10972aa4e27c01378dad2c72" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "device_history" ("isDeleted" boolean NOT NULL DEFAULT false, "deletedDate" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "updatedAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "id" SERIAL NOT NULL, "user" character varying NOT NULL, "deviceId" character varying NOT NULL, "status" character varying NOT NULL, "statusDisplay" boolean NOT NULL, "result" boolean NOT NULL, "description" character varying, "date" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, CONSTRAINT "PK_e7b12f40c596560b264d9cd68f5" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "third_party" ("isDeleted" boolean NOT NULL DEFAULT false, "deletedDate" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "updatedAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "id" SERIAL NOT NULL, "name" character varying NOT NULL, "url" character varying NOT NULL, "note" character varying, "description" character varying, CONSTRAINT "PK_a9b4c282f25d91ea8a5493929df" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "third_party_api" ("isDeleted" boolean NOT NULL DEFAULT false, "deletedDate" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "updatedAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "id" SERIAL NOT NULL, "name" character varying NOT NULL, "note" character varying, "description" character varying, "endpointGetParam" character varying NOT NULL, "thirdPartyId" integer NOT NULL, "method" character varying NOT NULL, CONSTRAINT "PK_3ff164d900aa3a7537937b004b3" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "response_param" ("isDeleted" boolean NOT NULL DEFAULT false, "deletedDate" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "updatedAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "id" SERIAL NOT NULL, "paramDefault" character varying, "paramChange" character varying, "type" character varying NOT NULL, "defaultData" character varying, "parentId" integer, "mappingApiId" integer NOT NULL, CONSTRAINT "PK_060398eaf7f7312dda0f5abb596" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "request_param" ("isDeleted" boolean NOT NULL DEFAULT false, "deletedDate" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "updatedAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "id" SERIAL NOT NULL, "paramDefault" character varying, "paramChange" character varying, "type" character varying NOT NULL, "defaultData" character varying, "parentId" integer, "mappingApiId" integer NOT NULL, CONSTRAINT "PK_4acba212601abfaf5f48b79ebf3" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "mapping_api" ("isDeleted" boolean NOT NULL DEFAULT false, "deletedDate" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "updatedAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "id" SERIAL NOT NULL, "endpoint" character varying NOT NULL, "requestHeaderParam" character varying, "name" character varying NOT NULL, "note" character varying, "description" character varying, "thirdPartyApiId" integer NOT NULL, "typeBrandId" integer NOT NULL, "method" character varying NOT NULL, "requestType" character varying NOT NULL, "responseType" character varying NOT NULL, CONSTRAINT "PK_98cf915d1ad1440148b0015d211" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "structure" ("isDeleted" boolean NOT NULL DEFAULT false, "deletedDate" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "updatedAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "id" SERIAL NOT NULL, "name" character varying NOT NULL, "description" character varying, "isDisable" boolean NOT NULL DEFAULT false, "apiKey" character varying, CONSTRAINT "PK_90ac7986e769d602d218075215c" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "structure_organization" ("isDeleted" boolean NOT NULL DEFAULT false, "deletedDate" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "updatedAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "id" SERIAL NOT NULL, "name" character varying NOT NULL, "description" character varying, "parent_id" integer, "structure_id" integer NOT NULL, CONSTRAINT "PK_f8a1910052be1dcca04ddf8557f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "token_device" ("isDeleted" boolean NOT NULL DEFAULT false, "deletedDate" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "updatedAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "id" SERIAL NOT NULL, "token" character varying NOT NULL, "tokenSecret" character varying, "brandId" integer NOT NULL, "organigationId" integer NOT NULL, CONSTRAINT "PK_c6459612f0dbbd8619568f3a9c6" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "response_code" ("isDeleted" boolean NOT NULL DEFAULT false, "deletedDate" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "updatedAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "id" SERIAL NOT NULL, "codeDefault" character varying, "codeChange" character varying, "default" boolean NOT NULL DEFAULT false, "mappingApiId" integer NOT NULL, CONSTRAINT "PK_44e81f880ff576258238f942b1b" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "authorization_kiosk" ("isDeleted" boolean NOT NULL DEFAULT false, "deletedDate" TIMESTAMP, "createdAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "updatedAt" TIMESTAMP NOT NULL DEFAULT ('now'::text)::timestamp(6) with time zone, "id" SERIAL NOT NULL, "organizationId" integer NOT NULL, "apiKey" character varying, "apiKeyHash" character varying, "thirdPartyId" integer NOT NULL, "token" character varying NOT NULL, "ip" character varying NOT NULL, "deviceId" character varying, CONSTRAINT "PK_6b27b3e879abe043acfdb94f100" PRIMARY KEY ("id"))`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`DROP TABLE "authorization_kiosk"`);
        await queryRunner.query(`DROP TABLE "response_code"`);
        await queryRunner.query(`DROP TABLE "token_device"`);
        await queryRunner.query(`DROP TABLE "structure_organization"`);
        await queryRunner.query(`DROP TABLE "structure"`);
        await queryRunner.query(`DROP TABLE "mapping_api"`);
        await queryRunner.query(`DROP TABLE "request_param"`);
        await queryRunner.query(`DROP TABLE "response_param"`);
        await queryRunner.query(`DROP TABLE "third_party_api"`);
        await queryRunner.query(`DROP TABLE "third_party"`);
        await queryRunner.query(`DROP TABLE "device_history"`);
        await queryRunner.query(`DROP TABLE "device"`);
        await queryRunner.query(`DROP TABLE "type_brand_device"`);
        await queryRunner.query(`DROP TABLE "brand_device"`);
        await queryRunner.query(`DROP TABLE "type_device"`);
        await queryRunner.query(`DROP TABLE "organization"`);
        await queryRunner.query(`DROP TABLE "sesame_lock_code"`);
        await queryRunner.query(`DROP TABLE "devices"`);
        await queryRunner.query(`DROP TABLE "auth"`);
    }

}
